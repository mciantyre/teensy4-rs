(function() {
    var type_impls = Object.fromEntries([["teensy4_bsp",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-ErrorType-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; ErrorType for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-I2c-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-I2c-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; I2c for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transaction\" class=\"method trait-impl\"><a href=\"#method.transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transaction</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    operations: &amp;mut [Operation&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as ErrorType&gt;::Error&gt;</h4></section></summary><div class='docblock'>Execute the provided operations on the I2C bus. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read</a>(&amp;mut self, address: A, read: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::Error&gt;</h4></section></summary><div class='docblock'>Reads enough bytes from slave with <code>address</code> to fill <code>read</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>(&amp;mut self, address: A, write: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::Error&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_read\" class=\"method trait-impl\"><a href=\"#method.write_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_read</a>(\n    &amp;mut self,\n    address: A,\n    write: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n    read: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::Error&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> and then reads enough bytes to fill <code>read</code> <em>in a\nsingle transaction</em>. <a>Read more</a></div></details></div></details>","I2c","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.N\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a class=\"constant\">N</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a> = N</h4></section></summary><div class=\"docblock\"><p>The peripheral instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_controller_enabled\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_controller_enabled</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Indicates if the controller is (<code>true</code>) or is not (<code>false</code>) enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_controller_enable\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_controller_enable</a>(&amp;mut self, enable: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Enable (<code>true</code>) or disable (<code>false</code>) the controller.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_controller\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reset_controller</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reset the controller.</p>\n<p>Note that this may not not reset all peripheral state, like the controller\nenabled state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.release\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">release</a>(self) -&gt; (Instance&lt;RegisterBlock, N&gt;, P)</h4></section></summary><div class=\"docblock\"><p>Release the LPI2C components.</p>\n<p>This does not change any component state; it releases the components as-is.\nIf you need to obtain the registers in a known, good state, consider calling\nmethods like <a href=\"Self::reset_controller\"><code>reset_controller()</code></a> before releasing\nthe registers.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.controller_status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">controller_status</a>(&amp;self) -&gt; ControllerStatus</h4></section></summary><div class=\"docblock\"><p>Read the controller status bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_controller_status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_controller_status</a>(&amp;self, status: ControllerStatus)</h4></section></summary><div class=\"docblock\"><p>Clear the controller status bits that are set high.</p>\n<p>The implementation will clear any read-only bits, so it’s OK to pass in\n<code>ControllerStatus::all()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_fifo\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_fifo</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Resets the transmit and receive FIFOs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enqueue_controller_command\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">enqueue_controller_command</a>(&amp;self, command: ControllerCommand)</h4></section></summary><div class=\"docblock\"><p>Enqueue a command into the controller transmit data register.</p>\n<p><code>enqueue_controller_command</code> does not check that the FIFO can hold the\ncommand. Check for the transmit data flag in the status\nresponse to understand the FIFO’s state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_data_register\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read_data_register</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read the controller receive data register.</p>\n<p>Returns <code>None</code> if there is no data in the receive FIFO.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disabled\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">disabled</a>&lt;R&gt;(&amp;mut self, func: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut Disabled&lt;'_, N&gt;) -&gt; R) -&gt; R</h4></section></summary><div class=\"docblock\"><p>Temporarily disable the LPI2C peripheral.</p>\n<p>The handle to a <a href=\"crate::lpi2c::Disabled\"><code>Disabled</code></a> driver lets you modify\nLPI2C settings that require a fully disabled peripheral.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pins\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pins</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;P</a></h4></section></summary><div class=\"docblock\"><p>Borrow the pins.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pins_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pins_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut P</a></h4></section></summary><div class=\"docblock\"><p>Exclusively borrow the pins.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interrupts\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">interrupts</a>(&amp;self) -&gt; Interrupts</h4></section></summary><div class=\"docblock\"><p>Returns the bitflags that indicate enabled or disabled LPI2C interrupts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_interrupts\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_interrupts</a>(&amp;self, interrupts: Interrupts)</h4></section></summary><div class=\"docblock\"><p>Enable or disable LPI2C interrupts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.watermark\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">watermark</a>(&amp;self, direction: Direction) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the watermark level for the given direction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.controller_fifo_status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">controller_fifo_status</a>(&amp;self) -&gt; ControllerFifoStatus</h4></section></summary><div class=\"docblock\"><p>Returns the FIFO status.</p>\n</div></details></div></details>",0,"teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lpi2c%3CPins%3CSCL,+SDA%3E,+N%3E\" class=\"impl\"><a href=\"#impl-Lpi2c%3CPins%3CSCL,+SDA%3E,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;SCL, SDA, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; Lpi2c&lt;Pins&lt;SCL, SDA&gt;, N&gt;<div class=\"where\">where\n    SDA: Pin&lt;Signal = Sda, Module = Const&lt;N&gt;&gt;,\n    SCL: Pin&lt;Signal = Scl, Module = Const&lt;N&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    lpi2c: Instance&lt;RegisterBlock, N&gt;,\n    pins: Pins&lt;SCL, SDA&gt;,\n    timings: &amp;Timing,\n) -&gt; Lpi2c&lt;Pins&lt;SCL, SDA&gt;, N&gt;</h4></section></summary><div class=\"docblock\"><p>Create an LPI2C driver from an LPI2C instance and a pair of pins.</p>\n<p>When this call returns, the LPI2C pins are configured for their\nLPI2C functions, the controller is enabled after reset, and the driver\nis using the provided timing configuration for the clock.</p>\n</div></details></div></details>",0,"teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-Read-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; Read for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as Read&gt;::Error&gt;</h4></section></summary><div class='docblock'>Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code> <a>Read more</a></div></details></div></details>","Read","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transactional-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-Transactional-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; Transactional for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec\" class=\"method trait-impl\"><a href=\"#method.exec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">exec</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    operations: &amp;mut [Operation&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as Transactional&gt;::Error&gt;</h4></section></summary><div class='docblock'>Execute the provided operations on the I2C bus. <a>Read more</a></div></details></div></details>","Transactional","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TransactionalIter-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-TransactionalIter-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; TransactionalIter for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_iter\" class=\"method trait-impl\"><a href=\"#method.exec_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">exec_iter</a>&lt;'a, O&gt;(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    operations: O,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as TransactionalIter&gt;::Error&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Operation&lt;'a&gt;&gt;,</div></h4></section></summary><div class='docblock'>Execute the provided operations on the I2C bus (iterator version). <a>Read more</a></div></details></div></details>","TransactionalIter","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-Write-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; Write for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as Write&gt;::Error&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> <a>Read more</a></div></details></div></details>","Write","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-WriteIter-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; WriteIter for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>&lt;B&gt;(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    bytes: B,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as WriteIter&gt;::Error&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> <a>Read more</a></div></details></div></details>","WriteIter","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIterRead-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-WriteIterRead-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; WriteIterRead for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter_read\" class=\"method trait-impl\"><a href=\"#method.write_iter_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_iter_read</a>&lt;B&gt;(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    bytes: B,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as WriteIterRead&gt;::Error&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> and then reads enough bytes to fill <code>buffer</code> <em>in a\nsingle transaction</em> <a>Read more</a></div></details></div></details>","WriteIterRead","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteRead-for-Lpi2c%3CP,+N%3E\" class=\"impl\"><a href=\"#impl-WriteRead-for-Lpi2c%3CP,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; WriteRead for Lpi2c&lt;P, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ControllerStatus</h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_read\" class=\"method trait-impl\"><a href=\"#method.write_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_read</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>,\n    bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;Lpi2c&lt;P, N&gt; as WriteRead&gt;::Error&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> and then reads enough bytes to fill <code>buffer</code> <em>in a\nsingle transaction</em> <a>Read more</a></div></details></div></details>","WriteRead","teensy4_bsp::board::Lpi2c1","teensy4_bsp::board::Lpi2c3"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[27271]}