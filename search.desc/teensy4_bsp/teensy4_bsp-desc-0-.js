searchState.loadedDescShard("teensy4_bsp", 0, "A Rust board support package (BSP) for the Teensy 4.\nSYSTICK external clock frequency.\nPre-configured board resources.\nFrequency (Hz) of the ARM core.\nFrequency (Hz) of the IPG bus.\nUse <code>instances()</code> to safely acquire. Instances for all of …\n100 KHz.\n400 KHz.\nFrequency (Hz) of all LPI2C peripherals.\nFrequency (Hz) of all LPSPI clocks.\nThe board’s dedicated LED.\nLPI2C1 peripheral.\nLPI2C3 peripheral.\nLPI2C timing parameters.\nClock speed.\nLPSPI1 peripheral.\nLPSPI2 peripheral.\nLPSPI3 peripheral.\nLPSPI4 peripheral.\nPins for a LPSPI device.\nLPUART1 peripheral.\nLPUART2 peripheral.\nLPUART3 peripheral.\nLPUART4 peripheral.\nLPUART6 peripheral.\nLPUART8 peripheral.\nType for LPUART baud rates.\n1 MHz.\nPERCLK clock frequency (Hz).\nResources constructed by the board.\nResources for a Teensy 4.0.\nResources for a Teensy 4.1.\nResources for a Teensy MicroMod.\nFrequency (Hz) of all UARTs.\nFrequency (Hz) of the crystal oscillator.\nThe register block for ADC1.\nThe register block for ADC1.\nThe register block for ADC1.\nThe register block for ADC1.\nThe register block for ADC2.\nThe register block for ADC2.\nThe register block for ADC2.\nThe register block for ADC2.\nBoth edge sampling.\nClock control module.\nClock control module.\nClock control module.\nClock control module.\nAnalog clock control module.\nAnalog clock control module.\nAnalog clock control module.\nAnalog clock control module.\nDCDC converter\nDCDC converter\nDCDC converter\nDCDC converter\nDMA channels.\nDMA channels.\nDMA channels.\nDMA channels.\nThe FlexIO1 register block.\nThe FlexIO1 register block.\nThe FlexIO1 register block.\nThe FlexIO1 register block.\nThe FlexIO2 register block.\nThe FlexIO2 register block.\nThe FlexIO2 register block.\nThe FlexIO2 register block.\nThe FlexIO3 register block.\nThe FlexIO3 register block.\nThe FlexIO3 register block.\nThe FlexIO3 register block.\nFlexPWM1 components.\nFlexPWM1 components.\nFlexPWM1 components.\nFlexPWM1 components.\nFlexPWM2 components.\nFlexPWM2 components.\nFlexPWM2 components.\nFlexPWM2 components.\nFlexPWM3 components.\nFlexPWM3 components.\nFlexPWM3 components.\nFlexPWM3 components.\nFlexPWM4 components.\nFlexPWM4 components.\nFlexPWM4 components.\nFlexPWM4 components.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGPIO1 port.\nGPIO1 port.\nGPIO1 port.\nGPIO1 port.\nGPIO2 port.\nGPIO2 port.\nGPIO2 port.\nGPIO2 port.\nGPIO3 port.\nGPIO3 port.\nGPIO3 port.\nGPIO3 port.\nGPIO4 port.\nGPIO4 port.\nGPIO4 port.\nGPIO4 port.\nGeneral purpose timer 1.\nGeneral purpose timer 1.\nGeneral purpose timer 1.\nGeneral purpose timer 1.\nGeneral purpose timer 2.\nGeneral purpose timer 2.\nGeneral purpose timer 2.\nGeneral purpose timer 2.\nAcquire peripheral instances.\nAcquire all peripheral instances.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate the board’s LED.\nCreate a LPI2C peripheral.\nThe register block for <code>Lpi2c1</code>.\nThe register block for <code>Lpi2c1</code>.\nThe register block for <code>Lpi2c1</code>.\nThe register block for <code>Lpi2c1</code>.\nThe register block for <code>Lpi2c3</code>.\nThe register block for <code>Lpi2c3</code>.\nThe register block for <code>Lpi2c3</code>.\nThe register block for <code>Lpi2c3</code>.\nComputes a LPI2C baud rate, assuming ideal bus behavior.\nCreate a LPSPI peripheral.\nThe register blocks for <code>Lpspi1</code>.\nThe register blocks for <code>Lpspi1</code>.\nThe register blocks for <code>Lpspi1</code>.\nThe register blocks for <code>Lpspi1</code>.\nThe register blocks for <code>Lpspi2</code>.\nThe register blocks for <code>Lpspi2</code>.\nThe register blocks for <code>Lpspi2</code>.\nThe register blocks for <code>Lpspi2</code>.\nThe register blocks for <code>Lpspi3</code>.\nThe register blocks for <code>Lpspi3</code>.\nThe register blocks for <code>Lpspi3</code>.\nThe register blocks for <code>Lpspi3</code>.\nThe register block for <code>Lpspi4</code>.\nThe register block for <code>Lpspi4</code>.\nThe register block for <code>Lpspi4</code>.\nThe register block for <code>Lpspi4</code>.\nCreate a LPUART peripheral.\nThe register block for <code>Lpuart1</code>.\nThe register block for <code>Lpuart1</code>.\nThe register block for <code>Lpuart1</code>.\nThe register block for <code>Lpuart1</code>.\nThe register block for <code>Lpuart2</code>.\nThe register block for <code>Lpuart2</code>.\nThe register block for <code>Lpuart2</code>.\nThe register block for <code>Lpuart2</code>.\nThe register block for <code>Lpuart3</code>.\nThe register block for <code>Lpuart3</code>.\nThe register block for <code>Lpuart3</code>.\nThe register block for <code>Lpuart3</code>.\nThe register block for <code>Lpuart4</code>.\nThe register block for <code>Lpuart4</code>.\nThe register block for <code>Lpuart4</code>.\nThe register block for <code>Lpuart4</code>.\nThe register block for <code>Lpuart6</code>.\nThe register block for <code>Lpuart6</code>.\nThe register block for <code>Lpuart6</code>.\nThe register block for <code>Lpuart6</code>.\nThe register block for <code>Lpuart8</code>.\nThe register block for <code>Lpuart8</code>.\nThe register block for <code>Lpuart8</code>.\nThe register block for <code>Lpuart8</code>.\nComputes a UART baud rate.\nOversampling rate.\nChip select 0\nAll available pins.\nAll available pins.\nAll available pins.\nAll available pins.\nPeriodic interrupt timer channels.\nPeriodic interrupt timer channels.\nPeriodic interrupt timer channels.\nPeriodic interrupt timer channels.\nPrepare clocks and power for the MCU.\nBaud rate modulo divisor.\nSerial clock\nSerial data in\nSerial data out\nCore registers for the SNVS low-power domain.\nCore registers for the SNVS low-power domain.\nCore registers for the SNVS low-power domain.\nCore registers for the SNVS low-power domain.\nThe secure real-time counter.\nThe secure real-time counter.\nThe secure real-time counter.\nThe secure real-time counter.\nCreate resources for the Teensy 4.0 board.\nCreate resources for the Teensy 4.1 board.\nTemperature monitor of the core.\nTemperature monitor of the core.\nTemperature monitor of the core.\nTemperature monitor of the core.\nCreate resources for the Teensy MicroMod board.\nTrue random number generator.\nTrue random number generator.\nTrue random number generator.\nTrue random number generator.\nUSB1 instances.\nUSB1 instances.\nUSB1 instances.\nUSB1 instances.")